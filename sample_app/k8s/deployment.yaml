apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-info-server
  labels:
    app: server-info-server
spec:
  # Will be dynamically set to match number of nodes
  replicas: 1
  selector:
    matchLabels:
      app: server-info-server
  template:
    metadata:
      labels:
        app: server-info-server
    spec:
      # Service account for reading node information
      serviceAccountName: node-reader
      # Enable host networking to access Android app on localhost:8005
      hostNetwork: true
      # Only schedule on phone nodes
      nodeSelector:
        device-type: phone
      # Alternative: use node affinity for more flexible scheduling
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: device-type
                operator: In
                values:
                - phone
          # Fallback: avoid master nodes if phone nodes not available
          - weight: 50
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: DoesNotExist
        # Spread pods across different nodes
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - server-info-server
              topologyKey: kubernetes.io/hostname
      containers:
      - name: server-info-server
        image: localhost:5000/server-info-server:latest
        imagePullPolicy: Always  # Always pull from registry
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name  # Use pod name as hostname
        # Phone server configuration
        - name: PHONE_SERVER_HOST
          valueFrom:
            configMapKeyRef:
              name: phone-server-config
              key: phone.server.host
        - name: PHONE_SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: phone-server-config
              key: phone.server.port
        - name: PHONE_SERVER_ENABLED
          valueFrom:
            configMapKeyRef:
              name: phone-server-config
              key: phone.server.enabled
        resources:
          requests:
            memory: "71Mi"
            cpu: "50m"
          limits:
            memory: "106Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 2
        # Graceful shutdown
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 5"]
      # Restart policy
      restartPolicy: Always
      # Tolerate node problems (useful for unstable phone environments)
      tolerations:
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 30
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 30
