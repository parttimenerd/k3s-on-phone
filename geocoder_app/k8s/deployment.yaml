apiVersion: apps/v1
kind: Deployment
metadata:
  name: reverse-geocoder
  labels:
    app: reverse-geocoder
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: reverse-geocoder
  template:
    metadata:
      labels:
        app: reverse-geocoder
    spec:
      terminationGracePeriodSeconds: 10
      # Prefer control-plane node, allow any node if needed
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
          - weight: 50
            preference:
              matchExpressions:
              - key: device-type
                operator: In
                values:
                - phone
      # Add tolerations for control-plane and system conditions
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      - key: node.kubernetes.io/disk-pressure
        effect: NoSchedule
      - key: node.kubernetes.io/memory-pressure
        effect: NoSchedule
      - key: node.kubernetes.io/unreachable
        effect: NoExecute
        tolerationSeconds: 300
      - key: node.kubernetes.io/not-ready
        effect: NoExecute
        tolerationSeconds: 300
      containers:
      - name: reverse-geocoder
        image: reverse-geocoder:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8090
          name: http
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 5"]
        resources:
          requests:
            cpu: "50m"
          limits:
            cpu: "300m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8090
          initialDelaySeconds: 20
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8090
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        startupProbe:
          httpGet:
            path: /health
            port: 8090
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 3
          failureThreshold: 15
        env:
        - name: JAVA_OPTS
          value: "-Xmx169m -Xms84m -XX:+UseContainerSupport -XX:+UnlockExperimentalVMOptions -XX:+UseZGC -XX:+TieredCompilation -XX:TieredStopAtLevel=1"
