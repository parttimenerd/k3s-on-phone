name: Build Android App

on:
  push:
    branches: [ main ]
    paths: [ 'android/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'android/**' ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
        
    - name: Accept Android SDK licenses
      run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
      
    - name: Install Gradle
      run: |
        wget https://services.gradle.org/distributions/gradle-8.10.2-bin.zip
        unzip -q gradle-8.10.2-bin.zip
        sudo mv gradle-8.10.2 /opt/gradle
        sudo ln -sf /opt/gradle/bin/gradle /usr/local/bin/gradle
        gradle --version
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
      
    - name: Build debug APK
      run: |
        cd android
        gradle assembleDebug
      env:
        GRADLE_OPTS: "--enable-native-access=ALL-UNNAMED"
        
    - name: Build release APK
      run: |
        cd android
        gradle assembleRelease
      env:
        GRADLE_OPTS: "--enable-native-access=ALL-UNNAMED"
        
    - name: Verify APK files exist
      run: |
        echo "Checking for APK files..."
        ls -la android/app/build/outputs/apk/debug/
        ls -la android/app/build/outputs/apk/release/
        echo "Debug APK:"
        file android/app/build/outputs/apk/debug/app-debug.apk
        echo "Release APK:"
        file android/app/build/outputs/apk/release/app-release-unsigned.apk
        
    - name: Create Snapshot Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: snapshot-${{ github.run_number }}-${{ github.sha }}
        name: Android Snapshot Build ${{ github.run_number }}
        body: |
          ## üì± Android APK Snapshot Build
          
          **Build Info:**
          - Build Number: `${{ github.run_number }}`
          - Commit: `${{ github.sha }}`
          - Branch: `${{ github.ref_name }}`
          - Triggered by: ${{ github.event_name }}
          
          **Direct APK Downloads:**
          - üêõ **Debug APK**: Development build with debugging enabled
          - üöÄ **Release APK**: Production build (unsigned, optimized)
          
          ## Features
          - REST API server on port 8005
          - GPS location and orientation sensors  
          - MediaPipe LLM inference (Gemma, DeepSeek-R1, Llama 3.2, TinyLlama)
          - Object detection with EfficientDet Lite 2
          - Camera capture with front/rear support
          - Model management with download and testing
          - Performance metrics (tokens/second)
          - Streaming text generation with cancellation
          
          ## Installation
          1. Download the APK file directly from assets below
          2. Enable "Install from unknown sources" in Android Settings ‚Üí Security
          3. Install the APK file
          4. Grant permissions (location, camera, storage) when prompted
          5. Verify app shows "Server running on port 8005"
          
          ## API Endpoints
          - `GET /status` - Server status and capabilities
          - `GET /location` - GPS coordinates with accuracy
          - `GET /orientation` - Device compass data
          - `POST /ai/text` - LLM text generation
          - `POST /ai/object_detection` - MediaPipe object detection
          - `GET /ai/models` - Available models list
          - `GET /capture` - Camera capture with zoom
          
          ---
          *This is an automated snapshot build. For stable releases, check the main releases page.*
        files: |
          android/app/build/outputs/apk/debug/app-debug.apk
          android/app/build/outputs/apk/release/app-release-unsigned.apk
        draft: false
        prerelease: true
        fail_on_unmatched_files: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
