name: Build Android App

on:
  push:
    branches: [ main ]
    paths: [ 'android/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'android/**' ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        build-tools: 34.0.0
        cmake: 3.22.1
        ndk: 25.2.9519653
        
    - name: Accept Android SDK licenses
      run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
      
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x android/gradlew
      
    - name: Build debug APK
      run: |
        cd android
        ./gradlew assembleDebug
        
    - name: Build release APK
      run: |
        cd android
        ./gradlew assembleRelease
        
    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: k3s-phone-server-debug
        path: android/app/build/outputs/apk/debug/app-debug.apk
        
    - name: Upload release APK
      uses: actions/upload-artifact@v4
      with:
        name: k3s-phone-server-release
        path: android/app/build/outputs/apk/release/app-release-unsigned.apk
        
    - name: Create Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: android-v${{ github.run_number }}
        name: Android App Release v${{ github.run_number }}
        body: |
          Android app build for K3s Phone Server
          
          ## Features
          - REST API server on port 8005
          - GPS location and orientation sensors
          - MediaPipe LLM inference (Gemma, DeepSeek-R1, Llama 3.2, TinyLlama)
          - Object detection with EfficientDet Lite 2
          - Camera capture with front/rear support
          - Model management with download and testing
          - Performance metrics (tokens/second)
          - Streaming text generation with cancellation
          
          ## Installation
          1. Download the APK file
          2. Enable "Install from unknown sources" in Android settings
          3. Install the APK
          4. Grant permissions (location, camera, storage)
          5. Use REST API endpoints or model management UI
          
          ## API Endpoints
          - `GET /status` - Server status and capabilities
          - `GET /location` - GPS coordinates with accuracy
          - `GET /orientation` - Device compass data
          - `POST /ai/text` - LLM text generation
          - `POST /ai/object_detection` - MediaPipe object detection
          - `GET /ai/models` - Available models list
          - `GET /capture` - Camera capture with zoom
        files: |
          android/app/build/outputs/apk/debug/app-debug.apk
          android/app/build/outputs/apk/release/app-release-unsigned.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
