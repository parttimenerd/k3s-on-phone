name: Build Android App

on:
  push:
    branches: [ main ]
    paths: [ 'android/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'android/**' ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        build-tools: 34.0.0
        cmake: 3.22.1
        ndk: 25.2.9519653
        
    - name: Accept Android SDK licenses
      run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
      
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x android/gradlew
      
    - name: Build debug APK
      run: |
        cd android
        ./gradlew assembleDebug
        
    - name: Build release APK
      run: |
        cd android
        ./gradlew assembleRelease
        
    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: k3s-phone-server-debug
        path: android/app/build/outputs/apk/debug/app-debug.apk
        
    - name: Upload release APK
      uses: actions/upload-artifact@v4
      with:
        name: k3s-phone-server-release
        path: android/app/build/outputs/apk/release/app-release-unsigned.apk
        
    - name: Create Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: android-v${{ github.run_number }}
        name: Android App Release v${{ github.run_number }}
        body: |
          Automated Android app build with advanced multimodal AI capabilities
          
          ## Features
          - 🌐 Web server on port 8005 with REST API
          - 📍 GPS location API endpoint  
          - 🧭 Compass/orientation API endpoint
          - 🤖 Advanced multimodal AI with Gemma + MediaPipe
          - 📷 Camera capture with multi-camera selection (front/back/wide/zoom)
          - 🎯 Image classification and object detection
          - 💬 Natural language image analysis
          - 📊 Real-time request logging UI
          - 🔄 Background service operation
          - 📱 Automatic AI model download with license compliance
          
          ## Installation
          1. Download the APK file
          2. Enable "Install from unknown sources" in Android settings
          3. Install the APK
          4. Accept Gemma license terms on first launch
          5. Wait for AI models to download (~1.3GB)
          6. Grant necessary permissions (location, camera, storage)
          7. Start using the multimodal AI features!
          
          ## API Endpoints
          - `GET /status` - Server status and system info
          - `GET /location` - Current GPS location
          - `GET /orientation` - Device orientation/compass
          - `POST /ai/analyze` - Advanced multimodal AI analysis
          - `POST /ai/capture` - Capture and analyze with AI
          - `GET /capture` - Simple camera capture
          - `GET /logs` - Request logging data
        files: |
          android/app/build/outputs/apk/debug/app-debug.apk
          android/app/build/outputs/apk/release/app-release-unsigned.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
